{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anish\\\\Documents\\\\programming\\\\studhelp2.0\\\\src\\\\components\\\\NavBar\\\\NavBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BookOpen, LogOut } from \"lucide-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./NavBar.css\";\nimport defaultUserLogo from \"../../imgs/userPic.png\"; // Correct import for userPic\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = ({\n  onLogout,\n  userEmail\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [hidden, setHidden] = useState(false);\n  const [lastScrollY, setLastScrollY] = useState(window.scrollY);\n\n  // Handle scrolling behavior for Navbar visibility\n  const handleScroll = () => {\n    const currentScrollY = window.scrollY;\n    if (currentScrollY > lastScrollY && currentScrollY > 100) {\n      setHidden(true); // Navbar hides when scrolling down\n    } else {\n      setHidden(false); // Navbar reappears when scrolling up\n    }\n    setLastScrollY(currentScrollY);\n  };\n\n  // Handle user logout\n  const handleLogout = () => {\n    onLogout(); // Updates authentication state in App\n    navigate(\"/login\"); // Redirect user to login page\n  };\n  useEffect(() => {\n    // Add scroll event listener on mount\n    window.addEventListener(\"scroll\", handleScroll);\n\n    // Remove scroll event listener on unmount\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [lastScrollY]);\n\n  // Extract the first letter from the user's email\n  const userInitial = userEmail === null || userEmail === void 0 ? void 0 : userEmail.charAt(0).toUpperCase();\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `navbar ${hidden ? \"navbar-hidden\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-avatar\",\n        children: userInitial ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-circle\",\n          children: userInitial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this) // Display user initial\n        : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: defaultUserLogo // Use default user logo\n          ,\n          alt: \"Default User\",\n          className: \"default-user-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-logo-container\",\n        onClick: () => navigate(\"/\"),\n        children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n          className: \"navbar-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-title\",\n          children: \"StudHelp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: [/*#__PURE__*/_jsxDEV(LogOut, {\n          className: \"logout-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), \"Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(NavBar, \"psTWRJAZI7TkzehR7Mhow0IBUQ0=\", false, function () {\n  return [useNavigate];\n});\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","BookOpen","LogOut","useNavigate","defaultUserLogo","jsxDEV","_jsxDEV","NavBar","onLogout","userEmail","_s","navigate","hidden","setHidden","lastScrollY","setLastScrollY","window","scrollY","handleScroll","currentScrollY","handleLogout","addEventListener","removeEventListener","userInitial","charAt","toUpperCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anish/Documents/programming/studhelp2.0/src/components/NavBar/NavBar.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BookOpen, LogOut } from \"lucide-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\nimport defaultUserLogo from \"../../imgs/userPic.png\"; // Correct import for userPic\r\n\r\ntype NavBarProps = {\r\n  onLogout: () => void; // Logout function passed from App\r\n  userEmail: string; // User's email passed from App\r\n};\r\n\r\nconst NavBar: React.FC<NavBarProps> = ({ onLogout, userEmail }) => {\r\n  const navigate = useNavigate();\r\n  const [hidden, setHidden] = useState(false);\r\n  const [lastScrollY, setLastScrollY] = useState(window.scrollY);\r\n\r\n  // Handle scrolling behavior for Navbar visibility\r\n  const handleScroll = () => {\r\n    const currentScrollY = window.scrollY;\r\n\r\n    if (currentScrollY > lastScrollY && currentScrollY > 100) {\r\n      setHidden(true); // Navbar hides when scrolling down\r\n    } else {\r\n      setHidden(false); // Navbar reappears when scrolling up\r\n    }\r\n\r\n    setLastScrollY(currentScrollY);\r\n  };\r\n\r\n  // Handle user logout\r\n  const handleLogout = () => {\r\n    onLogout(); // Updates authentication state in App\r\n    navigate(\"/login\"); // Redirect user to login page\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Add scroll event listener on mount\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    // Remove scroll event listener on unmount\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [lastScrollY]);\r\n\r\n  // Extract the first letter from the user's email\r\n  const userInitial = userEmail?.charAt(0).toUpperCase();\r\n\r\n  return (\r\n    <nav className={`navbar ${hidden ? \"navbar-hidden\" : \"\"}`}>\r\n      <div className=\"navbar-container\">\r\n        {/* User Avatar */}\r\n        <div className=\"user-avatar\">\r\n          {userInitial ? (\r\n            <div className=\"avatar-circle\">{userInitial}</div> // Display user initial\r\n          ) : (\r\n            <img\r\n              src={defaultUserLogo} // Use default user logo\r\n              alt=\"Default User\"\r\n              className=\"default-user-logo\"\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {/* Logo */}\r\n        <div className=\"navbar-logo-container\" onClick={() => navigate(\"/\")}>\r\n          <BookOpen className=\"navbar-icon\" />\r\n          <span className=\"navbar-title\">StudHelp</span>\r\n        </div>\r\n\r\n        {/* Logout Button */}\r\n        <button className=\"logout-btn\" onClick={handleLogout}>\r\n          <LogOut className=\"logout-icon\" />\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}