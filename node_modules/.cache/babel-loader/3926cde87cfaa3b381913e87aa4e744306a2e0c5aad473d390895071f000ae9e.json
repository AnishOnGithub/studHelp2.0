{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anish\\\\Documents\\\\programming\\\\studhelp2.0\\\\src\\\\components\\\\Login\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setAuth\n}) => {\n  _s();\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false); // Add loading state\n  const navigate = useNavigate();\n  const {\n    email,\n    password\n  } = inputs;\n\n  // Handle input changes\n  const onChange = e => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submission\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    setIsLoading(true); // Start loading animation\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const parseRes = await response.json();\n      if (response.ok && parseRes.message === \"Login successful\") {\n        localStorage.setItem(\"token\", parseRes.token); // Save JWT for future requests\n        setAuth(true); // Update authentication state\n        navigate(\"/\"); // Redirect to the homepage\n      } else {\n        alert(parseRes.error || \"Invalid credentials!\"); // Handle errors\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      alert(\"Something went wrong. Please try again.\");\n    } finally {\n      setIsLoading(false); // Stop loading animation\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: onChange,\n        className: \"login-input\",\n        disabled: isLoading // Disable inputs during loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: onChange,\n        className: \"login-input\",\n        disabled: isLoading // Disable inputs during loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        disabled: isLoading,\n        children: [isLoading ? \"Logging in...\" : \"Login\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ki88bfWKh/vpX1c63twGX8XACbE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","setAuth","_s","inputs","setInputs","email","password","isLoading","setIsLoading","navigate","onChange","e","target","name","value","onSubmitForm","preventDefault","response","fetch","method","headers","body","JSON","stringify","parseRes","json","ok","message","localStorage","setItem","token","alert","error","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/anish/Documents/programming/studhelp2.0/src/components/Login/Login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface LoginProps {\r\n  setAuth: (value: boolean) => void; // Authentication state updater\r\n}\r\n\r\nconst Login: React.FC<LoginProps> = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false); // Add loading state\r\n  const navigate = useNavigate();\r\n\r\n  const { email, password } = inputs;\r\n\r\n  // Handle input changes\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submission\r\n  const onSubmitForm = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true); // Start loading animation\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (response.ok && parseRes.message === \"Login successful\") {\r\n        localStorage.setItem(\"token\", parseRes.token); // Save JWT for future requests\r\n        setAuth(true); // Update authentication state\r\n        navigate(\"/\"); // Redirect to the homepage\r\n      } else {\r\n        alert(parseRes.error || \"Invalid credentials!\"); // Handle errors\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false); // Stop loading animation\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>Login</h1>\r\n      <form onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"login-input\"\r\n          disabled={isLoading} // Disable inputs during loading\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"login-input\"\r\n          disabled={isLoading} // Disable inputs during loading\r\n        />\r\n        <button className=\"login-button\" disabled={isLoading}>\r\n          {isLoading ? \"Logging in...\" : \"Login\"} {/* Dynamic button text */}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}